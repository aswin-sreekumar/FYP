$date
	Thu Apr 20 15:44:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_tb $end
$var wire 1 ! Zero $end
$var wire 32 " Result [31:0] $end
$var wire 1 # OverFlow $end
$var wire 1 $ Negative $end
$var wire 1 % Carry $end
$var parameter 32 & finishtime $end
$var reg 32 ' A [31:0] $end
$var reg 3 ( ALUControl [2:0] $end
$var reg 32 ) B [31:0] $end
$var integer 32 * i [31:0] $end
$scope module dut $end
$var wire 32 + A [31:0] $end
$var wire 3 , ALUControl [2:0] $end
$var wire 32 - B [31:0] $end
$var wire 1 % Carry $end
$var wire 1 # OverFlow $end
$var wire 1 ! Zero $end
$var wire 32 . Sum [31:0] $end
$var wire 32 / Result [31:0] $end
$var wire 1 $ Negative $end
$var wire 1 0 Cout $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10100 &
$end
#0
$dumpvars
00
b11010010100111101001001110100101 /
b11010010100111101001001110100101 .
b11000000100010010101111010000001 -
b0 ,
b10010000101010011010100100100 +
b0 *
b11000000100010010101111010000001 )
b0 (
b10010000101010011010100100100 '
0%
1$
0#
b11010010100111101001001110100101 "
0!
$end
#20000
1#
0$
b110110011101010010110001101100 "
b110110011101010010110001101100 /
b110110011101010010110001101100 .
b10110001111100000101011001100011 )
b10110001111100000101011001100011 -
b10000100100001001101011000001001 '
b10000100100001001101011000001001 +
b1 *
#40000
0#
b1001101100110010001010010011010 "
b1001101100110010001010010011010 /
b1001101100110010001010010011010 .
b1000110110111111001100110001101 )
b1000110110111111001100110001101 -
b110101110010111101100001101 '
b110101110010111101100001101 +
b10 *
#60000
1#
b111011111110011101011001110111 "
b111011111110011101011001110111 /
b111011111110011101011001110111 .
b10001001001101110101001000010010 )
b10001001001101110101001000010010 -
b10110010110000101000010001100101 '
b10110010110000101000010001100101 +
b11 *
#80000
0#
b111110010111011000000001110 "
b111110010111011000000001110 /
b111110010111011000000001110 .
b110110101111100110100001101 )
b110110101111100110100001101 -
b111100111110001100000001 '
b111100111110001100000001 +
b100 *
#100000
b1011001101100011011111010110011 "
b1011001101100011011111010110011 /
b1011001101100011011111010110011 .
b11110100011011100110100111101 )
b11110100011011100110100111101 -
b111011001000111111000101110110 '
b111011001000111111000101110110 +
b101 *
#120000
1#
1$
b10111101000000100100111101111001 "
b10111101000000100100111101111001 /
b10111101000000100100111101111001 .
b1000110001011011111011110001100 )
b1000110001011011111011110001100 -
b1110110110101000101011111101101 '
b1110110110101000101011111101101 +
b110 *
#140000
0#
0$
b1100000001101010000111010111111 "
b1100000001101010000111010111111 /
b1100000001101010000111010111111 .
b11100011001101110010010011000110 )
b11100011001101110010010011000110 -
b1111100111111011110100111111001 '
b1111100111111011110100111111001 +
b111 *
#160000
1$
0#
b10111000000010110101011101101111 "
b10111000000010110101011101101111 /
b10111000000010110101011101101111 .
b11010101000100111101001010101010 )
b11010101000100111101001010101010 -
b11100010111101111000010011000101 '
b11100010111101111000010011000101 +
b1000 *
#180000
0$
b101110100000100110101001011100 "
b101110100000100110101001011100 /
b101110100000100110101001011100 .
b10111011110100100111001001110111 )
b10111011110100100111001001110111 -
b1110010101011111111011111100101 '
b1110010101011111111011111100101 +
b1001 *
#200000
b1010 *
#220000
